# CAT15 config

topics:
  input:
    lidar: /velodyne_points
    imu: /EL/Sensors/vectornav/IMU
  # output:

frames: # output frames (the transform between frames will be broadcasted)
  world: odom
  map: map
  body: base_link
  tf_pub: true

num_threads: 20 # OpenMP threads (will be equal to $(nproc) if it is set higher)

sensor_type: 1  # LiDAR type (0: OUSTER \ 1: VELODYNE \ 2: HESAI \ 3: LIVOX)

debug: true     # fill useful intermediate pcl (deskewed, final_raw...) for visualizing purposes
verbose: true   # print debug/performance board

estimate_extrinsics: true   # continuous estimation of LiDAR-IMU extrinsics 
time_offset: true           # whether to take into account a possible sync offset between IMU and LiDAR (set to true if they are not properly in sync)
end_of_sweep: false          # whether the sweep reference time is w.r.t. the start or the end of the scan (only applies to VELODYNE/OUSTER)

calibration:  # automatic IMU calibration (if all set to false, no calibration will be done)
  gravity_align: true     # estimate gravity vector
  accel: true             # estimate lin. accel. bias
  gyro: true              # estimate ang. vel. bias
  time: 3.0               # time to estimate (during this time, the robot must be at stand still)

extrinsics: # w.r.t baselink [SI]
  imu:
    t: [ 0.0, 0.0, 0.0 ]
    R: [ 1.,  0.,  0.,
          0.,  1.,  0.,
          0.,  0.,  1. ]
  lidar:
    t: [ 1.25,  0.,  0. ]
    R: [ 1.,  0.,  0.,
          0.,  1.,  0.,
          0.,  0.,  1. ]

intrinsics:
  accel:
    bias: [ 0.01, 0.01, 0.01 ]  # [m/s^2]
    sm:   [ 1.,  0.,  0.,
            0.,  1.,  0.,
            0.,  0.,  1. ]
  gyro:
    bias: [ 0.01, 0.01, 0.01 ]  # [rad/s]

filters:
  cropBox: # prism crop
    active: true
    box:
      min: [ -2.0, -2.0, -1.0 ]  # [m]
      max: [ 2.0, 2.0, 1.0 ]     # [m]

  voxelGrid:
    active: true
    leafSize: [ 0.5, 0.5, 0.5 ]

  minDistance: # sphere crop
    active: true
    value: 3.5  # [m]

  FoV: # crop field of view
    active: false
    value: 180  # [deg]
  
  rateSampling: # quick downsample
    active: true
    value: 4

iKFoM:  # Iterative Kalman Filter on Manifolds lib
  MAX_NUM_ITERS: 2                # max num+1 of iterations of the KF (limits comp. load)
  MAX_NUM_MATCHES: 5000           # max num of matches to account for when computing Jacobians (limits comp. load)
  MAX_NUM_PC2MATCH: 1.e+4         # max num of points to consider when matching with map (limits comp. load)
  LIMITS: 0.001                     

  Mapping:
    NUM_MATCH_POINTS: 5           # num of points that constitute a match
    MAX_DIST_PLANE: 2.0           # [m] max distance between points of every match
    PLANES_THRESHOLD: 5.0e-2      # [m] threshold to consider if match points are part of a plane 
    Octree: # incremental OcTree
      bucket_size: 2      # maximum number of points allowed in an octant before it gets subdivided
      min_extent: 0.2     # minimum extent of the octant (used to stop subdividing)
      downsampling: true  # whether to downsample the octree

  covariance:
    gyro: 6.01e-4
    accel: 1.53e-2
    bias_gyro: 1.54e-5
    bias_accel: 3.38e-4
